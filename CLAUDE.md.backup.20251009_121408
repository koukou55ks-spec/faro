# CLAUDE.md

**Auto-generated from /specs/ - Do not edit manually**

Last Updated: 2025-10-09 12:07:31
Generated by: scripts/build_claude_md.py

---

# ABSOLUTE PRIORITY

# 絶対優先仕様（ABSOLUTE PRIORITY）

**このファイルの内容は必ずCLAUDE.mdに反映すること**

最終更新: 2025-01-10

---

## プロジェクト基本情報

- プロジェクト名: Faro
- 目的: 知識格差を是正するパーソナルCFO AIアプリ
- ステータス: MVP開発中
- リリース目標: 2025年2月

---

## 技術スタック（絶対に変更禁止）

### フロントエンド
- Framework: **Next.js 15** (App Router)
- UI: **React 19**
- スタイリング: **Tailwind CSS + shadcn/ui**
- 状態管理: **Zustand**
- 言語: **TypeScript 5**

### バックエンド
- API: **Next.js API Routes**（FastAPI不使用）
- データベース: **Supabase (PostgreSQL)**
- ベクトル検索: **pgvector**（ChromaDB不使用）
- 認証: **Supabase Auth**

### AI
- メインAI: **Google Gemini 2.0 Flash**
- 埋め込み: **Gemini Embeddings**

### デプロイ
- フロントエンド: **Vercel**
- データベース: **Supabase Cloud**

---

## 絶対ルール（AI Control Rules）

### 1. 技術スタック変更禁止
- 上記の技術スタックを勝手に変更しない
- 変更が必要な場合は必ず事前承認を得る
- 理由を明確に説明すること

### 2. ファイル削除禁止
- ファイルを直接削除しない
- 不要なファイルは`/archive/`フォルダに移動
- 移動前に確認を取ること

### 3. 新規MDファイル作成制限
- 新しいMarkdownファイルを勝手に作らない
- 必要な場合は`/specs/high/`または`/specs/low/`に作成
- CLAUDE.mdは自動生成のみ

### 4. 環境変数の保護
- `.env.local`を絶対に削除・変更しない
- 新しい環境変数は`.env.local`に追加
- Gitにコミットしない

### 5. データベース操作
- スキーマ変更は必ずマイグレーションファイルで
- 直接SQLで変更しない
- バックアップを取ってから実行

---

## 優先事項（現在の最重要タスク）

### 今すぐやること
1. テストカバレッジ80%達成
2. Sentryセットアップ

### 今週中にやること
1. Stripe決済実装
2. ユーザーオンボーディング

### バックログ
1. PWA対応
2. 多言語対応
3. パフォーマンス最適化

---

## 禁止事項リスト

❌ FastAPIの追加
❌ ChromaDBの使用
❌ MongoDBなど他のDB
❌ .env.localの削除
❌ CLAUDE.mdの手動編集（自動生成のみ）
❌ プロジェクトルートへのMDファイル乱立

---

## ファイル構造（保護対象）

```
frontend/
├── app/              ← メインアプリ
├── components/       ← UIコンポーネント
└── lib/              ← ユーティリティ

specs/
├── _ABSOLUTE.md      ← このファイル
├── high/             ← 高優先仕様
└── low/              ← 低優先仕様

.claude/
├── commands/         ← Slash Commands
└── CONTEXT.md        ← 現在の作業状況
```

---

**このファイルが真実の唯一の源泉です。矛盾する記述があれば、このファイルが優先されます。**


---

# HIGH PRIORITY

## セキュリティルール

# セキュリティルール（HIGH PRIORITY）

## 環境変数管理

### 絶対に守ること
1. `.env.local`をGitにコミットしない
2. APIキーを平文でコードに書かない
3. 認証情報をログ出力しない

### 環境変数の追加手順
```bash
# 1. .env.localに追加
echo "NEW_API_KEY=xxx" >> .env.local

# 2. .gitignoreで保護されているか確認
cat .gitignore | grep ".env.local"

# 3. コードで使用
process.env.NEW_API_KEY
```

---

## 認証トークン管理

### 現在使用中のトークン
- `GITHUB_PERSONAL_ACCESS_TOKEN`: GitHub API用
- `VERCEL_ACCESS_TOKEN`: Vercelデプロイ用
- `NOTION_API_KEY`: Notion連携用
- `SUPABASE_SERVICE_KEY`: Supabase管理用

### トークンローテーション
- 3ヶ月ごとに更新推奨
- 漏洩時は即座に無効化

---

## データベースセキュリティ

### Row Level Security (RLS)
- 全テーブルでRLS有効化
- ユーザーは自分のデータのみアクセス可能

### SQLインジェクション対策
- Supabase SDKを使用（生SQLは避ける）
- パラメータ化クエリのみ使用

---

## Sentryエラー監視

### 監視対象
- クライアントエラー
- サーバーエラー
- API エラー

### 除外設定
- ブラウザ拡張機能エラー
- ネットワークエラー（一部）
- 想定内のAbortエラー


---

## 開発ワークフロー

# 開発ワークフロー（HIGH PRIORITY）

## Slash Commandsの使い方

### /ship - 本番デプロイ
```bash
/ship
```
実行内容:
1. 型チェック
2. Lint
3. ビルド
4. Git commit & push
5. Vercel本番デプロイ

### /test - テスト実行
```bash
/test
```
実行内容:
1. 既存テスト実行
2. カバレッジ確認
3. 不足テスト作成提案

### /fix - エラー修正
```bash
/fix
```
実行内容:
1. Lintエラー修正
2. 型エラー修正
3. ビルドエラー修正

### /status - 状況確認
```bash
/status
```
実行内容:
1. Git状態確認
2. 実装状況レポート
3. 次のアクション提案

---

## Git運用ルール

### コミットメッセージ規約
```
feat: 新機能追加
fix: バグ修正
chore: 雑務（ビルド設定等）
docs: ドキュメント更新
test: テスト追加・修正
```

### ブランチ戦略
- `main` or `master`: 本番環境
- `develop`: 開発環境（現在未使用）
- `feature/*`: 機能開発（現在未使用）

現在は`main/master`に直接コミット。

---

## 開発サーバー起動手順

```bash
cd frontend
npm run dev          # http://localhost:3000
```

---

## デプロイフロー

### プレビューデプロイ
```bash
cd frontend
vercel
```

### 本番デプロイ
```bash
cd frontend
vercel --prod
```

または `/ship` コマンド使用。

---

## トラブルシューティング

### ビルドエラー
1. `npm run type-check`で型エラー確認
2. `npm run lint`でコード品質確認
3. 依存関係エラーなら`npm ci`で再インストール

### Supabase接続エラー
1. `.env.local`の`SUPABASE_URL`確認
2. Supabaseダッシュボードでプロジェクト状態確認

### Gemini APIエラー
1. `GEMINI_API_KEY`が設定されているか確認
2. APIクォータを確認


---

## Low Priority Specs (Summary)

### 将来の拡張計画
# 将来の拡張計画（LOW PRIORITY）

## Phase 2（PMF達成後）

### Python AIマイクロサービス

...(詳細はspecs/low/参照)


---

**Source Files:**
- Absolute: specs/_ABSOLUTE.md
- High Priority: 2 files
- Low Priority: 1 files (summarized)

To update this file, run:
```bash
python scripts/build_claude_md.py
```

Or use Slash Command:
```
/rebuild-claude-md
```
