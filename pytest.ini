[pytest]
# Pytest Configuration for Faro v2.0

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Minimum Python version
minversion = 3.11

# Command line options
addopts =
    # Verbose output
    -v
    # Show extra test summary info
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Enable strict markers (all markers must be registered)
    --strict-markers
    # Show warnings
    -W default
    # Coverage (uncomment when pytest-cov is installed)
    # --cov=app
    # --cov-report=html
    # --cov-report=term-missing
    # Parallel execution (uncomment when pytest-xdist is installed)
    # -n auto

# Markers for test categorization
markers =
    unit: Unit tests (no external dependencies, fast)
    integration: Integration tests (requires database, external APIs)
    slow: Tests that take significant time to run
    auth: Authentication-related tests
    flywheel: Data flywheel engine tests
    api: API endpoint tests

# Asyncio mode (for async tests)
asyncio_mode = auto

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/test_logs.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test output
console_output_style = progress

# Timeout for tests (requires pytest-timeout)
# timeout = 30

# Filterwarnings
filterwarnings =
    # Ignore deprecation warnings from third-party libraries
    ignore::DeprecationWarning:google.*:
    ignore::DeprecationWarning:anthropic.*:
    # Treat our own warnings as errors
    error::UserWarning:app.*:

# Environment variables for tests
env =
    ENVIRONMENT=test
