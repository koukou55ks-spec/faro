name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  # ===================================
  # Job 1: „Ç≥„Éº„ÉâÂìÅË≥™„ÉÅ„Çß„ÉÉ„ÇØ
  # ===================================
  quality:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run TypeScript type check
        working-directory: ./frontend
        run: npm run type-check

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      - name: Build check
        working-directory: ./frontend
        run: npm run build

  # ===================================
  # Job 2: „ÉÜ„Çπ„ÉàÂÆüË°å
  # ===================================
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./frontend
        run: npm test -- --coverage --passWithNoTests
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

  # ===================================
  # Job 3: Vercel„Éó„É¨„Éì„É•„Éº„Éá„Éó„É≠„Ç§
  # ===================================
  deploy-preview:
    name: Deploy to Vercel (Preview)
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

  # ===================================
  # Job 4: Êú¨Áï™„Éá„Éó„É≠„Ç§Ôºàmain„Éñ„É©„É≥„ÉÅ„ÅÆ„ÅøÔºâ
  # ===================================
  deploy-production:
    name: Deploy to Vercel (Production)
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful!"
          echo "üöÄ URL: https://faro.vercel.app"
